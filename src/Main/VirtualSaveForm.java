/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.rmi.ConnectException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import run.DBConnect;

/**
 *
 * @author Ashu
 */
public class VirtualSaveForm extends javax.swing.JFrame {

    /**
     * Creates new form VirtualSaveForm
     */
    Connection con;

    public VirtualSaveForm() {
        int count = 0;
        con = run.DBConnect.connection;
        initComponents();
        retrieveSubjectNames();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("USN");
        model.addColumn("NAME");
        model.addColumn(MainForm.subNamesV.get(0));
        model.addColumn(MainForm.subNamesV.get(1));
        model.addColumn(MainForm.subNamesV.get(2));
        model.addColumn(MainForm.subNamesV.get(3));
        model.addColumn(MainForm.subNamesV.get(4));
        model.addColumn(MainForm.subNamesV.get(5));
        model.addColumn(MainForm.subNamesV.get(6));
        model.addColumn(MainForm.subNamesV.get(7));
        model.addColumn("TOTAL");
        model.addColumn("RESULT");
        ResultSet r = getDetails();
        try {
            while (r.next()) {
                System.out.println("comes here");
                model.insertRow(count++, new Object[]{r.getString(1), r.getString(2), r.getInt(5), r.getInt(9), r.getInt(13), r.getInt(17), r.getInt(21), r.getInt(25), r.getInt(29), r.getInt(33), r.getInt(35), r.getString(36)});
                System.out.println("comes here also");
            }
        } catch (SQLException ex) {
            Logger.getLogger(VirtualSaveForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        table.setModel(model);

        SaveTable ST = new SaveTable(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VirtualSaveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VirtualSaveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VirtualSaveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VirtualSaveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VirtualSaveForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private ResultSet getDetails() {
        Statement stmt = null;
        ResultSet rs = null;
        String query = "";
        //get USN from user

        query = "select DISTINCT USN,NAME,SUB1_TOT ,SUB2_TOT ,SUB3_TOT ,SUB4_TOT ,SUB5_TOT ,SUB6_TOT ,SUB7_TOT ,SUB8_TOT, TOTAL,MARKCLASS from RESULTTABLE";

        try {
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);

        } catch (SQLException ex) {
            System.out.println("Error : " + ex);
        }
        return rs;
    }

    private void retrieveSubjectNames() {
        MainForm.subNamesV.clear();
        Connection con = DBConnect.connection;
        ResultSet rs = null;
        String sql = "Select * From SUBJECTTABLE";
        try {
            Statement stmt = con.createStatement();
            rs = stmt.executeQuery(sql);

            while (rs.next()) {
                MainForm.subNamesV.add(rs.getString(1));
            }

        } catch (SQLException ex) {
            Logger.getLogger(resultFetch.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
